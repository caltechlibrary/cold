<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="210mm"
   height="297mm"
   viewBox="0 0 210 297"
   version="1.1"
   id="svg5"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs2">
    <meshgradient
       id="meshgradient2089"
       gradientUnits="userSpaceOnUse"
       x="0.22573379"
       y="128.06396"
       gradientTransform="matrix(0.99771728,0,0,0.80431678,0.82946236,57.155544)">
      <meshrow
         id="meshrow11095">
        <meshpatch
           id="meshpatch11097">
          <stop
             path="c 95.1707,-18.4305  150.644,8.73352  210.958,-4.9418"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop11099" />
          <stop
             path="c -0.00282341,61.7143  -2.62634,112.108  -1.42307,175.062"
             style="stop-color:#00ffff;stop-opacity:1"
             id="stop11101" />
          <stop
             path="c -70.135,-0.00888402  -140.264,-0.00934494  -210.392,-0.00358793"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop11103" />
          <stop
             path="c 0.00248873,-61.72  0.259735,-109.236  0.85733,-170.117"
             style="stop-color:#00ffff;stop-opacity:1"
             id="stop11105" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <g
     id="layer1"
     style="display:inline;mix-blend-mode:normal">
    <rect
       style="fill:url(#meshgradient2089);fill-opacity:1;stroke-width:0.236427"
       id="rect49"
       width="209.90933"
       height="148.91348"
       x="0.20144804"
       y="148.07625" />
    <ellipse
       id="path486"
       style="fill:#00ffff;stroke:#000000;stroke-width:0.282432"
       cx="21.38961"
       cy="116.24112"
       rx="0.046706151"
       ry="0.053220205" />
    <ellipse
       id="path488"
       style="fill:#00ffff;stroke:#000000;stroke-width:0.282432"
       cx="21.38961"
       cy="116.24112"
       rx="0.046706151"
       ry="0.053220205" />
    <g
       id="g4865"
       transform="matrix(1,0,0,1.1394689,-4.9090909,25.142806)">
      <path
         style="fill:#000080;stroke-width:0.203944"
         id="path490"
         d="m 53.827562,115.39716 c 2.444911,-0.63767 4.758709,-1.73229 6.95261,-2.96694 4.647123,-2.61522 3.828461,-2.13941 7.254927,-4.48035 0.694009,-0.51986 1.404421,-1.01869 2.082028,-1.55958 1.074876,-0.85803 1.928318,-1.66427 2.904184,-2.60866 0.778978,-0.75386 1.446328,-1.42328 2.325268,-2.0558 -4.133637,2.53655 -1.905288,0.74849 -0.898812,0.97468 0.454066,0.10205 0.585675,0.24822 0.978402,0.51062 1.07674,0.7748 1.59889,2.45172 3.051251,2.66345 0.386134,0.0563 0.77957,-0.0378 1.169356,-0.0568 0.441271,-0.15434 0.892664,-0.28252 1.323808,-0.46302 1.193519,-0.49969 4.501262,-2.4516 4.724743,-2.62321 0.666639,-0.51192 1.714798,-3.096273 1.921192,-3.566002 0.42459,-0.966316 0.829051,-1.941281 1.243577,-2.911919 2.055212,-4.605715 3.966088,-9.283473 6.518368,-13.6478 0.533278,-0.911891 1.06722,-1.826803 1.681486,-2.686664 0.468145,-0.655313 1.038546,-1.231839 1.557821,-1.847759 -0.278518,0.187418 -1.096794,0.351604 -0.83555,0.562254 0.421731,0.340055 1.103597,-0.07058 1.626103,0.07519 0.639446,0.178395 1.237116,0.506212 1.786986,0.877005 2.02564,1.365935 3.10225,3.223989 4.32386,5.246206 0.42377,0.636396 0.7306,1.367774 1.2713,1.90919 2.86212,2.865889 7.7571,3.090248 11.54513,2.809753 0.86108,-0.06376 1.7128,-0.219516 2.5692,-0.329275 0.67532,-0.13657 1.35061,-0.273369 2.02599,-0.409707 0.80252,-0.162008 2.45313,-0.801112 3.09541,0.167261 0.28322,0.427033 0.25144,1.153731 0.27805,1.612386 0.0553,1.671479 0.28751,3.348924 0.91376,4.9115 0.36323,0.90631 0.73529,1.505343 1.20914,2.346321 0.23382,0.312657 0.45172,0.637781 0.70147,0.937972 0.25647,0.308264 1.93682,2.096918 2.08406,2.250448 1.62933,1.69888 3.31225,3.34679 4.9737,5.01428 1.38121,1.43078 2.9137,2.66143 4.68574,3.57792 1.67781,0.86776 3.49617,1.48014 5.24,2.20006 0.4787,0.22323 0.95981,0.44142 1.43612,0.66967 0.39618,0.18986 0.77749,0.41114 1.18119,0.58459 2.47533,1.06343 5.23031,1.78964 7.80876,2.57701 1.94395,0.76177 4.1254,1.09114 5.91796,2.20847 -0.004,0.10114 0.0107,0.20459 -0.0112,0.30341 -0.14673,0.6605 -0.5205,1.29571 -0.80982,1.89939 -0.51449,1.0735 -1.03548,2.1439 -1.55316,3.21588 -1.28805,2.91472 -2.62151,5.80698 -4.05166,8.65555 -0.48126,0.95859 -1.01935,1.88925 -1.47113,2.86196 -0.60939,1.31205 -2.51505,6.16833 -2.90623,7.15127 -2.49681,6.2828 -5.3263,12.42574 -8.30538,18.4941 -0.86164,1.75514 -1.80492,3.47061 -2.63438,5.24106 -2.2555,4.81424 -2.48463,5.82103 -4.31446,10.88721 -0.59027,1.86928 -1.21272,3.72878 -1.77081,5.60784 -1.04611,3.52221 -1.75908,6.30167 -2.5149,9.8675 -0.58212,2.74641 -0.94088,5.38782 -1.64832,8.10445 -0.29904,1.14835 -0.70238,2.26722 -1.05357,3.40083 -1.48668,3.74921 -3.79283,7.03539 -6.65999,9.85854 -0.89928,0.88547 -1.67562,1.51298 -2.623,2.31064 0.96404,-0.48021 -2.15147,1.54535 -1.55841,1.24408 0.46457,-0.23601 1.81129,-0.68984 1.31389,-0.84599 -0.58947,-0.18505 -1.13262,0.49367 -1.70628,0.72281 -0.93661,0.37411 -2.82114,1.05592 -3.78471,1.40839 -0.52542,0.19843 -1.06278,0.36795 -1.57625,0.59528 -1.4717,0.65156 -2.86231,1.47189 -4.30768,2.17951 -1.10382,0.5404 -2.21245,1.07157 -3.33169,1.57954 -3.88066,1.76126 -3.4538,1.52159 -7.426365,2.9805 -1.2144,0.27715 -2.409054,0.6616 -3.6432,0.83146 -3.074783,0.42317 -6.387357,0.11375 -9.139725,-1.41698 -2.093779,-1.16447 -2.353468,-1.85685 -3.813614,-3.68371 -0.401919,-0.76216 -0.906897,-1.47868 -1.205753,-2.28646 -0.755244,-2.04137 -0.896514,-4.33191 -0.965968,-6.46958 -0.127597,-3.92722 0.194112,-7.85228 0.494469,-11.76318 0.03365,-1.17129 0.09151,-2.34213 0.100959,-3.51385 0.01418,-1.75888 -0.0956,-7.77001 -0.115067,-9.29276 -0.04346,-3.40034 -0.04502,-7.2533 -0.177262,-10.64704 -0.07196,-1.84674 -0.202411,-3.69077 -0.303615,-5.53616 -0.456678,-3.0854 -0.213046,-6.2504 -0.669771,-9.3375 -0.208765,-1.41108 -0.52223,-2.80999 -0.926902,-4.17819 -0.437901,-1.48053 -1.02369,-2.91457 -1.595249,-4.34919 -1.080762,-2.71275 -2.348619,-5.37117 -3.572954,-8.02137 -1.185309,-2.51111 -2.40158,-5.00769 -3.590116,-7.51727 -0.330496,-0.69784 -0.887152,-1.8502 -1.157106,-2.61717 -0.129731,-0.36857 -0.21802,-0.75034 -0.32703,-1.12552 -0.328913,-1.12722 -0.300711,-2.31741 -0.734062,-3.41996 -0.563105,-1.43267 -1.470097,-2.76179 -2.262507,-4.07408 -0.689599,-1.06895 -1.313005,-2.19407 -2.124566,-3.1799 -0.144711,-0.17579 -0.647495,-0.72291 -0.821979,-0.91407 -0.224349,-0.36044 -0.859492,-0.82371 -1.045431,-1.18827 -0.142071,-0.27856 -0.257839,-0.56966 -0.386759,-0.85449 -1.058547,-2.46834 -1.439661,-5.22879 -2.760789,-7.5905 -0.113279,-0.2025 -0.270181,-0.37754 -0.405272,-0.56631 -0.409495,-0.29973 -0.199565,-0.21126 -0.608136,-0.31151 0,0 -2.462839,1.79334 -2.462839,1.79334 v 0 c 0.302982,-0.12428 0.131924,-0.1075 0.513944,0.0419 0.146646,0.15874 0.318857,0.29737 0.43994,0.47621 0.478175,0.7063 0.857759,1.66561 1.141925,2.43939 0.618252,1.68351 1.055285,3.42465 1.582836,5.13646 0.108409,0.32707 0.19489,0.66216 0.325229,0.98119 0.147979,0.3622 0.877842,0.86115 1.103789,1.19495 0.157095,0.16143 0.710259,0.72622 0.837434,0.87332 0.828854,0.95869 1.480462,2.06058 2.205786,3.09412 0.805915,1.2881 1.671985,2.57904 2.187447,4.01964 0.397164,1.10998 0.392754,2.30809 0.733727,3.43154 0.118217,0.3834 0.209956,0.77592 0.354653,1.15021 0.294207,0.76103 0.922533,1.8779 1.288802,2.56117 1.30828,2.44059 2.619598,4.87975 3.873264,7.34888 1.938363,3.99951 3.929596,8.02478 5.159577,12.31402 1.251827,4.36543 1.364011,8.89626 1.76479,13.38548 0.09404,1.8464 0.218452,3.69151 0.282107,5.53919 0.270568,7.85365 0.105544,15.72075 -0.0909,23.57344 -0.216796,3.88661 -0.512803,7.89432 -0.461008,11.78218 0.02976,2.23361 0.08376,4.51558 0.863916,6.64895 0.301229,0.82372 0.830783,1.5458 1.246173,2.31869 1.493602,1.88804 1.74372,2.59098 3.90353,3.7874 2.80831,1.55567 6.214551,1.87607 9.349834,1.45716 1.249673,-0.16697 2.460106,-0.55187 3.690158,-0.8278 1.245879,-0.45347 2.50503,-0.87229 3.737637,-1.36041 1.844089,-0.73027 5.044739,-2.17823 6.884939,-3.05527 0.8142,-0.38805 1.61687,-0.79967 2.42227,-1.20554 0.57941,-0.29198 1.141,-0.62018 1.73208,-0.88795 0.52376,-0.23728 1.072,-0.41681 1.60799,-0.6252 3.68934,-1.35557 7.63052,-2.53552 10.55389,-5.2933 0.90947,-0.8026 1.5998,-1.38597 2.46621,-2.27836 2.77891,-2.86225 5.01778,-6.15847 6.44633,-9.89389 0.32907,-1.13075 0.70747,-2.24841 0.98722,-3.39226 0.70885,-2.89831 0.94226,-5.09652 1.52437,-8.04146 1.02893,-5.20551 2.39992,-10.33802 4.11354,-15.3624 0.70011,-1.89051 1.35082,-3.7999 2.10034,-5.67152 1.71605,-4.28512 2.7551,-6.21564 4.74305,-10.3873 2.94921,-6.18879 5.8246,-12.41136 8.64315,-18.66028 0.60506,-1.39725 1.21342,-2.79308 1.81516,-4.19175 0.43401,-1.00881 0.83142,-2.03365 1.29208,-3.03066 0.44431,-0.96161 0.94904,-1.89436 1.42159,-2.84252 1.44534,-2.90014 2.85889,-5.81476 4.24865,-8.74175 0.58371,-1.10674 1.18648,-2.20359 1.75867,-3.3163 0.30545,-0.59401 0.77445,-1.38836 0.79078,-2.0807 0.005,-0.18382 -0.0828,-0.35837 -0.12426,-0.53757 -1.90217,-1.08698 -4.16527,-1.34381 -6.1965,-2.10809 -2.05588,-0.61699 -4.11367,-1.22707 -6.12204,-1.98802 -1.4554,-0.55144 -1.45125,-0.59566 -2.76848,-1.19499 -0.48926,-0.22261 -0.98092,-0.43997 -1.47137,-0.65996 -1.74194,-0.70644 -3.55368,-1.30712 -5.23129,-2.16034 -1.76204,-0.89616 -3.3103,-2.09198 -4.71201,-3.47792 -2.65177,-2.61949 -5.26468,-5.295587 -7.56532,-8.231016 -0.50473,-0.867128 -0.82139,-1.33884 -1.19485,-2.28733 -0.61237,-1.555266 -0.79953,-3.221651 -0.81989,-4.880011 -0.0615,-0.82893 -0.0423,-2.050529 -1.05344,-2.392957 -1.28121,-0.433903 -3.5417,0.681626 -4.82057,0.77904 -0.86982,0.130777 -1.73361,0.310644 -2.60945,0.39233 -3.70507,0.34555 -8.49782,0.188609 -11.29438,-2.65083 -0.53426,-0.542449 -0.84374,-1.266244 -1.26561,-1.899369 -0.4,-0.655732 -0.7624,-1.33574 -1.20002,-1.967199 -1.19668,-1.726771 -2.89331,-3.72078 -4.9687,-4.42786 -0.55033,-0.187496 -1.18712,-0.405596 -1.732751,-0.204933 -1.3919,0.511891 -2.556052,1.501478 -3.834077,2.252217 -0.476039,0.609787 -0.995843,1.188057 -1.42812,1.829362 -0.579464,0.859669 -1.090187,1.76394 -1.601611,2.665412 -2.504561,4.414728 -4.417628,9.109856 -6.573518,13.695001 -0.451982,0.980428 -1.816563,4.056563 -2.495662,5.149393 -0.29268,0.47099 -1.383825,0.86667 -1.038313,1.30071 0.340849,0.42818 0.996263,-0.47437 1.435904,-0.80125 0.720634,-0.53581 -3.073659,1.813 -2.447896,1.12964 -0.788974,0.10343 -1.160221,0.30521 -1.869403,-0.11571 -0.237167,-0.14076 -0.407891,-0.37174 -0.594293,-0.57458 -0.536999,-0.58436 -0.943825,-1.28728 -1.573252,-1.78821 -0.431853,-0.33124 -0.90626,-0.71991 -1.481964,-0.76637 -1.423964,-0.11491 -2.769536,2.72863 -3.869482,1.96651 -0.79091,0.62651 -1.458875,1.32226 -2.175557,2.03169 -1.4929,1.47778 -3.073851,2.86363 -4.813952,4.05082 -0.807741,0.54654 -1.617127,1.09067 -2.423223,1.63962 -0.114366,0.0778 -0.216469,0.17468 -0.338074,0.2408 -2.098552,1.14092 -4.262983,2.23568 -6.59857,2.80588 0,0 -2.417727,1.81099 -2.417727,1.81099 z" />
      <path
         style="fill:#000080;stroke-width:0.264583"
         id="path130"
         d="m 96.248515,98.765242 c -0.246311,0.264795 -0.473469,0.548791 -0.738928,0.794385 -0.4899,0.453233 -2.539389,2.088933 -2.930668,2.407903 -1.682358,1.37146 -3.344079,2.76777 -5.011391,4.1574 -1.620152,1.20177 -1.481963,1.14799 -3.168742,2.20941 -0.469093,0.29517 -1.856375,1.20511 -1.42403,0.85834 0.5711,-0.45808 1.342736,-0.66007 1.843119,-1.19449 0.272097,-0.29061 -0.743921,0.28388 -1.118013,0.42005 -0.331912,0.12082 -0.66658,0.23393 -0.999871,0.3509 -2.506138,1.00786 -5.441439,1.89363 -7.172211,4.06318 0,0 3.590412,-1.51437 3.590412,-1.51437 v 0 c 0.93399,-0.95743 2.949747,-2.03406 -1.96197,0.87211 -0.225536,0.13345 0.469146,-0.23383 0.706937,-0.34396 0.938123,-0.43451 0.854795,-0.38062 1.861894,-0.757 0.129165,-0.0461 2.162929,-0.76995 2.202233,-0.78983 3.132146,-1.58451 6.197563,-3.31227 8.944203,-5.50855 1.657326,-1.39008 3.309032,-2.78599 4.994103,-4.14257 0.602625,-0.48515 2.471028,-1.927437 3.099183,-2.54689 0.302977,-0.298783 0.543195,-0.655135 0.814795,-0.982702 0,0 -3.531055,1.646684 -3.531055,1.646684 z" />
      <path
         style="fill:#000080;stroke-width:0.264583"
         id="path132"
         d="m 120.30172,95.6493 c -1.75751,1.023369 -3.56653,1.95475 -5.37848,2.876889 -0.55872,0.284342 -1.13312,0.538929 -1.68007,0.845298 -1.57691,0.883293 -3.15048,1.774423 -4.68934,2.722463 -0.53405,0.32901 -1.0155,0.7366 -1.52326,1.1049 -1.40571,1.02871 -2.54526,2.35313 -3.82321,3.52217 -0.98893,0.90465 -2.05925,1.72709 -3.07251,2.60495 -0.2266,0.20085 -0.453199,0.40169 -0.679799,0.60254 0,0 3.530669,-1.44042 3.530669,-1.44042 v 0 c 0.21135,-0.19267 0.42271,-0.38534 0.63406,-0.57801 0.98754,-0.86858 2.01965,-1.6941 2.9808,-2.59184 1.24529,-1.16312 2.37917,-2.45279 3.78062,-3.44257 0.5125,-0.35928 1.40797,-0.46549 1.53749,-1.07783 0.11698,-0.55302 -2.03476,0.94616 -1.48334,0.82183 0.6277,-0.14154 1.14731,-0.58297 1.72053,-0.87531 1.73293,-0.883806 3.471,-1.759188 5.17528,-2.697647 0,0 2.97056,-2.397413 2.97056,-2.397413 z" />
      <path
         style="fill:#000080;stroke-width:0.264583"
         id="path134"
         d="m 118.73608,107.23384 c 1.11555,2.05879 3.08855,3.30522 5.01336,4.51412 2.13164,1.16959 4.45501,1.94446 6.76913,2.66694 0.87867,0.21692 1.76464,0.40199 2.64817,0.5976 0,0 3.14264,-2.18637 3.14264,-2.18637 v 0 c -0.8885,-0.17262 -1.775,-0.35433 -2.65847,-0.55136 -2.31979,-0.65727 -4.64264,-1.38911 -6.76715,-2.54874 -1.86109,-1.13378 -3.83026,-2.33184 -4.73884,-4.41268 0,0 -3.40884,1.92049 -3.40884,1.92049 z" />
      <path
         style="fill:#000080;stroke-width:0.264583"
         id="path136"
         d="m 128.50826,140.14186 c -1.29572,3.82863 -3.10972,7.45214 -4.63583,11.189 -1.33077,3.25853 -1.99222,5.16029 -3.22102,8.50952 -2.6143,7.84924 -5.44368,15.64811 -7.60993,23.6392 -0.3497,1.29002 -0.64754,2.59354 -0.97132,3.89032 -0.97051,4.56972 -1.85711,9.1564 -2.82506,13.72669 0,0 3.20876,-1.55641 3.20876,-1.55641 v 0 c 0.83692,-4.50938 1.55902,-9.03949 2.46332,-13.53637 0.30355,-1.28273 0.5821,-2.57165 0.91065,-3.84821 2.05644,-7.99022 4.73778,-15.81811 7.53066,-23.57433 0.5757,-1.50225 1.13342,-3.01151 1.72711,-4.50674 2.09957,-5.28791 4.52572,-10.43672 6.95371,-15.57935 0,0 -3.53105,1.64668 -3.53105,1.64668 z" />
      <path
         style="fill:#000080;stroke-width:0.264583"
         id="path138"
         d="m 99.973494,129.5738 c 0.508976,9.76484 0.178136,19.54636 -0.124174,29.31175 -0.439664,8.88849 -0.683742,17.78457 -1.025996,26.67668 -0.121185,2.34018 -0.23122,4.68083 -0.356735,7.02077 0,0 3.210871,-1.62279 3.210871,-1.62279 v 0 c 0.0264,-2.29744 0.0715,-4.59451 0.0977,-6.89196 0.13755,-8.79651 0.165,-17.59521 0.46096,-26.3889 0.14625,-4.13642 0.31729,-8.27199 0.44546,-12.40901 0.18018,-5.81585 0.18808,-11.64496 0.72152,-17.44403 0,0 -3.429636,1.74749 -3.429636,1.74749 z" />
      <path
         style="fill:#000080;stroke-width:0.264583"
         id="path140"
         d="m 64.178028,123.12364 c 3.675187,4.82901 7.325212,9.67731 10.713151,14.71319 2.641156,4.00144 4.590439,8.41419 5.866509,13.03217 0.778962,2.81898 0.897874,3.91773 1.391898,6.77474 0.791785,4.96713 1.530237,9.94765 1.909919,14.9662 0.208222,2.75224 0.213111,3.91902 0.289237,6.58754 0.0094,0.82892 0.01884,1.65783 0.02826,2.48675 0,0 3.094424,-1.58916 3.094424,-1.58916 v 0 c -0.04305,-0.81362 -0.0861,-1.62724 -0.129146,-2.44086 -0.483671,-7.21153 -1.117838,-14.41379 -2.297541,-21.55023 -0.203626,-1.11973 -0.371488,-2.24655 -0.610878,-3.35918 -1.260652,-5.85917 -3.429701,-11.53903 -6.717165,-16.56532 -1.923825,-2.85666 -1.889911,-2.84833 -3.892431,-5.65348 -2.18799,-3.06496 -4.522284,-6.04027 -6.386308,-9.32254 0,0 -3.259924,1.92018 -3.259924,1.92018 z" />
      <path
         style="fill:#000080;stroke-width:0.264583"
         id="path142"
         d="m 84.871861,202.61993 c 0.418539,3.07042 1.26666,6.07499 2.636869,8.86205 0.907703,1.84629 1.581473,2.73849 2.700411,4.40484 0.389724,0.51853 0.77945,1.03707 1.169176,1.55561 0,0 3.082054,-1.83996 3.082054,-1.83996 v 0 c -0.413403,-0.49593 -0.826807,-0.99186 -1.240211,-1.48779 -0.463296,-0.64454 -0.96144,-1.26541 -1.389885,-1.93362 -2.172102,-3.38765 -3.539315,-7.27958 -3.481358,-11.33278 0,0 -3.477056,1.77165 -3.477056,1.77165 z" />
      <path
         style="fill:#000080;stroke-width:0.264583"
         id="path144"
         d="m 98.905585,205.61961 c 0.808829,0.20092 0.396436,0.0856 1.236005,0.35017 0,0 3.19217,-2.16368 3.19217,-2.16368 v 0 c -0.8127,-0.29434 -0.424,-0.1622 -1.16459,-0.4008 0,0 -3.263585,2.21431 -3.263585,2.21431 z" />
      <path
         style="fill:#000080;stroke-width:0.264583"
         id="path146"
         d="m 105.23714,209.54708 c 1.401,0.39528 0.6785,0.17584 2.16546,0.66507 0,0 3.101,-2.09928 3.101,-2.09928 v 0 c -1.44289,-0.52134 -0.75203,-0.27013 -2.07281,-0.75298 0,0 -3.19365,2.18719 -3.19365,2.18719 z" />
      <path
         style="fill:#000080;stroke-width:0.264583"
         id="path148"
         d="m 122.37553,197.55112 c -0.28457,2.58559 -1.30711,4.98294 -2.3892,7.31936 -0.71501,1.49623 -1.93503,2.57056 -3.19119,3.5992 0,0 3.54028,-1.42961 3.54028,-1.42961 v 0 c 1.24013,-1.05821 2.3848,-2.20332 3.04988,-3.7253 1.05025,-2.44305 2.02165,-4.92173 2.49891,-7.55141 0,0 -3.50868,1.78776 -3.50868,1.78776 z" />
    </g>
    <ellipse
       id="path168"
       style="fill:#000080;stroke:#000000;stroke-width:0.282432"
       cx="123.42857"
       cy="89.071449"
       rx="0.046706151"
       ry="0.053220205" />
    <ellipse
       id="path170"
       style="fill:#000080;stroke:#000000;stroke-width:0.282432"
       cx="123.42857"
       cy="89.071449"
       rx="0.046706151"
       ry="0.053220205" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
